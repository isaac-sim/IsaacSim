name: Build and Test

on:
  push:
    branches: [ main, public-main ]
  pull_request:
    branches: [ main, public-main ]

# Concurrency control to prevent parallel runs on the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  build-and-test:
    runs-on: [self-hosted, gpu]
    strategy:
      matrix:
        ubuntu_version: [22.04, 24.04]
    timeout-minutes: 240
    env:
        CUDA_VISIBLE_DEVICES: all
        NVIDIA_VISIBLE_DEVICES: all
        NVIDIA_DRIVER_CAPABILITIES: all
        CUDA_HOME: /usr/local/cuda
        LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64
        DOCKER_HOST: unix:///var/run/docker.sock
        DOCKER_TLS_CERTDIR: ""
        OMNI_KIT_ALLOW_ROOT: 1
    container:
      image: ubuntu:${{ matrix.ubuntu_version }}
      options: --gpus all --security-opt=no-new-privileges:true --privileged

    steps:
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y git git-lfs build-essential python3 python3-pip curl wget ca-certificates gnupg lsb-release
        # Install Docker
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        apt-get update
        apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        # Start Docker daemon
        dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2376 &
        sleep 10

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true

    - name: Configure Git LFS
      run: |
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git lfs install
        git lfs update --force

    - name: Build Isaac Sim
      run: |
        touch .eula_accepted
        chmod +x ./build.sh
        ./build.sh

    - name: Test Isaac Sim
      run: |
        cd _build/linux-x86_64/release
        touch .eula_accepted
        chmod +x ./isaac-sim.sh
        ./isaac-sim.sh --no-window --/app/quitAfter=500 --/app/file/ignoreUnsavedOnExit=1
